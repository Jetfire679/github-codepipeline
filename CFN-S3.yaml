AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation to create an S3 bucket that is no public facing, requires TLS, and contents are encrypted/

Parameters: 
  pEnvironment:
    Description: Application Environment
    Type: String
    Default: dev
    AllowedValues:
    - prd
    - dev
    - tst
  pAppName:
    Description: Application Name
    Type: String
    Default: billing


Resources: 
# KMS S3 encryption key
  rS3Key:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
                  # - 'arn:aws:iam::675716041761:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AdministratorAccess_3b3702678e849fa7'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow VPC Flow Logs to use the key as well
            Effect: Allow
            Principal:
              Service:
                - delivery.logs.amazonaws.com
            Action: 'kms:GenerateDataKey*'
            Resource: '*'
  rS3KeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${pAppName}-${pEnvironment}-kms-alias"
      TargetKeyId:
        Ref: rS3Key

  rS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Sub "${pAppName}-${pEnvironment}-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${rS3KeyAlias}'
              SSEAlgorithm: 'aws:kms'
      # CorsConfiguration: 
      # LifecycleConfiguration: 
      # NotificationConfiguration: 
      # VersioningConfiguration: 
      # WebsiteConfiguration: 
      # Tags:
      #   - Key: key
      #     Value: value

  rS3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: "rS3Bucket"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Principal:
              AWS: "*"
            Action:
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}/*"
              - !Sub "arn:aws:s3:::${rS3Bucket}"
            Effect: "Allow"        
          - Principal:
              AWS: "*"
            Action:
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}/*"
              - !Sub "arn:aws:s3:::${rS3Bucket}"
            Effect: "Deny"
            Condition:
              Bool:
                aws:SecureTransport: "false"
          - Principal:
              AWS: "*"
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}/*"
            Effect: "Deny"
            Condition:
              StringEquals:
                s3:x-amz-acl:
                  - "public-read"
                  - "public-read-write"
                  - "authenticated-read"
          - Principal:
              AWS: "*"
            Action:
              - "s3:PutObject"
              - "s3:PutObjectAcl"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}/*"
            Effect: "Deny"
            Condition:
              StringLike:
                s3:x-amz-grant-read:
                  - "*http://acs.amazonaws.com/groups/global/AllUsers*"
                  - "*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*"
          - Principal:
              AWS: "*"
            Action:
              - "s3:PutBucketAcl"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}"
            Effect: "Deny"
            Condition:
              StringEquals:
                s3:x-amz-acl:
                  - "public-read"
                  - "public-read-write"
                  - "authenticated-read"
          - Principal:
              AWS: "*"
            Action:
              - "s3:PutBucketAcl"
            Resource:
              - !Sub "arn:aws:s3:::${rS3Bucket}"
            Effect: "Deny"
            Condition:
              StringLike:
                s3:x-amz-grant-read:
                  - "*http://acs.amazonaws.com/groups/global/AllUsers*"
                  - "*http://acs.amazonaws.com/groups/global/AuthenticatedUsers*"

Outputs:
  rS3KeyAlias:
      Description: 'S3 KMS Key Alias'
      Value:
          Ref: 'rS3KeyAlias'
  rS3Bucket:
      Description: 'Encrypted S3 Bucket'
      Value:
          Ref: 'rS3Bucket'